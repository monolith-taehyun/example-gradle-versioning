plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

task generateChangelog {
    doLast {
        // changelog 파일을 생성할 위치를 지정합니다.
        def changelogFile = new File('CHANGELOG.md')

        // git commit 메시지를 읽어옵니다.
        def commitLog = 'git log --oneline --decorate --reverse'.execute().text.split('\n')

        // changelog 파일에 내용을 작성합니다.
        changelogFile.write('### 최신 버전 (날짜)')
        commitLog.each {
            def commit = it.split(' ')[0]
            def message = it.split(' ')[1]
            changelogFile.append('\n* ' + message)
        }
    }
}